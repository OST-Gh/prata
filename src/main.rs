///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
use lazy_regex::regex;
use netspaces::{B24Ns192, IPv4Pns};
use std::env;
use std::io::{stdout, BufWriter, Write};
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
mod call;
mod client;
mod netspaces;
mod server;
mod test;
mod util;
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
fn main() -> util::Result<()> {
	let mut out = BufWriter::new(stdout().lock());
	let addr_spc = util::determine_address().map(IPv4Pns::try_from)??;
	dbg![util::StartupOption::new()];
	dbg![util::Port::new()];
	// [202407160951+0200] NOTE(by: @OST-Gh): current test code.
	out.write_all(b"\0")?;
	out.flush()?;
	Ok(())
}
